{"version":3,"sources":["../../../../server/api/room/room.socket.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;6BAGI,oBAAoB;;;;yBACpB,cAAc;;;;AAF/B,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAI1C,IAAI,YAAY,GAAG;AACjB,UAAQ,EAAC,WAAW;AACpB,cAAY,EAAC,kBAAkB;AAC/B,cAAY,EAAC,WAAW;CACzB,CAAC;;AAEK,SAAS,QAAQ,CAAC,MAAM,EAAC,EAAE,EAAE;;AAElC,OAAK,IAAI,CAAC,IAAI,YAAY,EAAE;AAC1B,QAAI,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/B,QAAI,QAAQ,GAAG,cAAc,CAAC,CAAC,EAAE,MAAM,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAC;AACrD,UAAM,CAAC,EAAE,CAAC,OAAO,GAAC,CAAC,EAAC,QAAQ,CAAC,CAAC;GAC/B;;;AAGD,QAAM,CAAC,EAAE,CAAC,iBAAiB,EAAC,eAAe,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC,CAAC;;CAGzD;;AACD,SAAS,eAAe,CAAC,MAAM,EAAC,EAAE,EAAC;AACjC,SAAO,YAAU;AACf,+BAAK,OAAO,CAAC,EAAC,GAAG,EAAC,EAAE,CAAC,GAAG,EAAC,EAAC,EAAC,KAAK,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAC1C,QAAQ,CAAC;AACR,UAAI,EAAC,OAAO;AACZ,WAAK,wBAAK;AACV,YAAM,EAAC,EAAC,SAAS,EAAC,EAAC,UAAU,EAAC,EAAC,GAAG,EAAC,EAAE,CAAC,GAAG,EAAC,EAAC,EAAC,IAAI,EAAC,KAAK,EAAC;KACxD,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,EAAC,IAAI,EAAG;AAClB,UAAI,CAAC,MAAM,GAAC,SAAS,CAAC;AACtB,UAAI,CAAC,SAAS,EAAE,CAAC;AACjB,UAAI,GAAC,IAAI,CAAC,KAAK,CAAC;AAChB,WAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;AAC5B,cAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,cAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAC5B,IAAI,CACH,gBAAgB,EAChB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EACX,GAAG,GAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,GAAC,aAAa,CAC9C,CAAC;OACH;AACD,YAAM,CAAC,UAAU,EAAE,CAAC;KACrB,CAAC,CAAC;GACN,CAAA;CACF;;AAED,SAAS,kBAAkB,CAAC,MAAM,EAAC;AACjC,SAAO,UAAS,MAAM,EAAC;AACrB,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;GACrB,CAAC;CACH;;AAED,SAAS,WAAW,CAAC,MAAM,EAAC,KAAK,EAAC;AAChC,SAAO,UAAS,GAAG,EAAC,OAAO,EAAC;;AAE1B,UAAM,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAC,GAAG,EAAC,OAAO,CAAC,CAAC;GAC/C,CAAC;CACH;;AAGD,SAAS,cAAc,CAAC,KAAK,EAAE,MAAM,EAAC,EAAE,EAAC,EAAE,EAAE;AAC3C,SAAO,EAAE,CAAC,MAAM,EAAC,KAAK,EAAC,EAAE,CAAC,CAAC;CAC5B;;AAED,SAAS,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;AACvC,SAAO,YAAW;AAChB,cAAU,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;GAC5C,CAAC;CACH","file":"room.socket.js","sourcesContent":["/**\n * Broadcast updates to client when the model changes\n */\n\n'use strict';\n\nvar RoomEvents = require('./room.events');\nimport User from '../user/user.model';\nimport Room from './room.model';\n\nvar socketEvents = {\n  'delete':eventToRoom,\n  'removeRoom':removeRoomListener,\n  'newMessage':eventToRoom\n};\n\nexport function register(socket,id) {\n  //Listen to user socketEvent\n  for (let e in socketEvents) {\n    let callback = socketEvents[e];\n    let listener = createListener(e, socket,callback,id);\n    socket.on('room:'+e,listener);\n  }\n  //***************************************\n  //Added by me\n  socket.on('forceDisconnect',forceDisconnect(socket,id));\n  //***************************************\n\n}\nfunction forceDisconnect(socket,id){\n  return function(){\n    User.findOne({_id:id._id},{rooms:1,status:1})\n      .populate({\n        path:'rooms',\n        model:Room,\n        select:{'members':{$elemMatch:{$ne:id._id}},kind:\"par\"}\n      }).exec((err,data)=>{\n        data.status='Offline';\n        data.saveAsync();\n        data=data.rooms;\n        for(var i=0;i<data.length;i++){\n          socket.log(data[i].members[0].name);\n          socket.to(data[i].members[0])\n          .emit(\n            \"userDisconnect\",\n            data[i]._id,\n            \" \"+socket.request.session.name+\" is offline\"\n          );\n        }\n        socket.disconnect();\n      });\n  }\n}\n\nfunction removeRoomListener(socket){\n  return function(roomId){\n    socket.leave(roomId)\n  };\n}\n\nfunction eventToRoom(socket,event){\n  return function(doc,message){\n    //console.log(event);\n    socket.to(doc.roomId).emit(event,doc,message);\n  };\n}\n\n\nfunction createListener(event, socket,cb,id) {\n  return cb(socket,event,id);\n}\n\nfunction removeListener(event, listener) {\n  return function() {\n    RoomEvents.removeListener(event, listener);\n  };\n}\n"]}