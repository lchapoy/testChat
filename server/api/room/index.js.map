{"version":3,"sources":["../../../../server/api/room/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;uBAEQ,SAAS;;8BACF,mBAAmB;;IAAnC,UAAU;;+BACA,yBAAyB;;IAAnC,IAAI;;AAEhB,IAAI,MAAM,GAAG,qBAAY,CAAC;;AAE1B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC3D,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC1E,MAAM,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAC9F,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AAC9E,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,aAAa,CAAC,CAAC;AACpE,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAC7E,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,qBAAqB,CAAC,CAAC;AACjG,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACvF,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAC7E,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,SAAS,CAAC,CAAC;AACzE,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AAC/E,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AAC/E,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,YAAY,CAAC,CAAC;AAClF,MAAM,UAAO,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,EAAG,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEnE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"index.js","sourcesContent":["'use strict';\n\nimport {Router} from 'express';\nimport * as controller from './room.controller';\nimport * as auth from '../../auth/auth.service';\n\nvar router = new Router();\n\nrouter.get('/', auth.isAuthenticated(),  controller.index);\nrouter.get('/:id/getRooms', auth.isAuthenticated(),  controller.getRooms);\nrouter.get('/:id/getRequestPendings', auth.isAuthenticated(),  controller.getRequestPendings);\nrouter.get('/:id/getMessage', auth.isAuthenticated(),  controller.getMessage);\nrouter.post('/', auth.isAuthenticated(),  controller.friendRequest);\nrouter.post('/createGroup', auth.isAuthenticated(),  controller.createGroup);\nrouter.post('/deleteFriendFromGroup', auth.isAuthenticated(),  controller.deleteFriendFromGroup);\nrouter.post('/addFriendToGroup', auth.isAuthenticated(),  controller.addFriendToGroup);\nrouter.post('/deleteGroup', auth.isAuthenticated(),  controller.deleteGroup);\nrouter.post('/exitGroup', auth.isAuthenticated(),  controller.exitGroup);\nrouter.post('/acceptFriend', auth.isAuthenticated(),  controller.acceptFriend);\nrouter.post('/rejectFriend', auth.isAuthenticated(),  controller.rejectFriend);\nrouter.put('/:id/storeMessage', auth.isAuthenticated(),  controller.storeMessage);\nrouter.delete('/:id', auth.isAuthenticated(),  controller.destroy);\n\nmodule.exports = router;\n"]}