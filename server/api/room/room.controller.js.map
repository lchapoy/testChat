{"version":3,"sources":["../../../../server/api/room/room.controller.js"],"names":[],"mappings":"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","file":"room.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/rooms              ->  index\n * POST    /api/rooms              ->  create\n * GET     /api/rooms/:id          ->  show\n * PUT     /api/rooms/:id          ->  update\n * DELETE  /api/rooms/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Room from './room.model';\nimport {Message} from './room.model';\nimport User from '../user/user.model';\nvar mongoose=require('mongoose');\n\n\nfunction responseWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    res.status(statusCode).json(err);\n  }\n}\n\nfunction showErrorMessage(res,message,statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    res.status(statusCode).json({message:message});\n  }\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction respondWith(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function() {\n    res.status(statusCode).end();\n  };\n}\n\n\n// Gets a list of Rooms\nexport function index(req, res) {\n  Room.findAsync()\n    .then(responseWithResult(res))\n    .catch(handleError(res));\n}\n\n/**\n * Deletes a Room\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n var roomId= req.params.id;\n  var friendId= req.query.friendId;\n  Room.findByIdAndRemoveAsync(roomId)\n    .then((data)=> {\n      removeContRoom(data.members)\n        .then(()=>{\n          Room.schema.emit('friendDeleted',{friendId,roomId,name:req.session.name,userId:req.session._id});\n          res.status(204).end();\n      })\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\n\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  User.findByIdAsync(userId)\n    .then(user => {\n      if (user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.saveAsync()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n/**\n *  Verify if User is already Registered\n * @param email\n * @param userId\n * @param cb\n * @param catchFn\n * @returns {*}\n */\nfunction isRegistered(email,userId,cb,catchFn){\n  return User.findOneAsync({email:email,request:{$ne:userId},pending:{$ne:userId},spam:{$ne:userId}}, {\"name\":1,\"img\":1,\"status\":1,\"email\":1})\n    .then(cb)\n    .catch(catchFn);\n}\n/**\n * Add Room\n */\nfunction addContRoom(roomId,membersId) {\n  return User.update({_id:{$in:membersId}},{$push:{rooms:roomId}},{multi: true});\n}\n/**\n * Friend Request\n */\nfunction requestFriend(pendingId,requestId) {\n  var promises=[];\n  promises.push(User.update({_id:{$in:requestId}},{$push:{request:pendingId}},{multi: true}));\n  promises.push(User.update({_id:{$in:pendingId}},{$push:{pending:requestId}},{multi: true}));\n  return Promise.all(promises);\n}\n/**\n * add par room and erase pending and request pending\n */\nfunction addParRoom(pendingId,requestId,roomId) {\n  var promises=[];\n  promises.push(User.update({_id:{$in:requestId}},{$pull:{request:pendingId}},{multi: true}));\n  promises.push(User.update({_id:{$in:pendingId}},{$pull:{pending:requestId}},{multi: true}));\n  promises.push(User.update({_id:{$in:[pendingId,requestId]}},{$push:{rooms:roomId}},{multi: true}));\n  return Promise.all(promises);\n}\n/**\n * Remove Room\n */\nfunction removeContRoom(roomId,membersId) {\n  return User.update({_id:{$in:membersId}},{$pull:{rooms:roomId}},{multi: true});\n}\n\n/**\n * Add Friend\n */\nexport function friendRequest(req, res) {\n\n  var userId = req.session._id;\n  var email = String(req.body.email);\n  isRegistered(email,userId,\n      user=>{\n        var friend=user;\n        if(friend._id.equals(userId)){\n          return showErrorMessage(res,\"You are not suppose to be your own friend\")();\n        }\n        Room.findOne({\n          $or:[{ members:[\n              userId,\n              friend._id\n            ]},{members:[\n              friend._id,\n              userId\n            ]}\n          ],\n          kind:'par'\n        })\n        .then( room =>{\n          if(!room){\n            requestFriend(userId,friend._id)\n              .then((response)=>{\n                console.log(response);\n                if(response.length==2){\n                  Room.schema.emit(\"tellFriend\",\n                    { toId:friend._id,\n                      from:req.session.user\n                    });\n                  res.status(201).json(friend);\n                }else{\n                  showErrorMessage(res,\"Request could not be sent to \"+email)();\n                }\n              }).catch(handleError(res));\n          }\n          else{\n            showErrorMessage(res,email+\" is already your friend\")();\n          }\n        });\n      },()=>{\n      User.findOneAsync({email:email})\n      .then((data)=>{\n          if(data.pending.indexOf(userId)!=-1)\n            showErrorMessage(res,\"You have a pending request from that user\")();\n          else if (data.request.indexOf(userId)!=-1)\n            showErrorMessage(res,\"User already have a pending request\")();\n          else\n            showErrorMessage(res,data.email+\" don't want to be your friend\")();\n        }).catch(()=>{\n          showErrorMessage(res,\"User doesn't exist\")();\n        })\n\n    });\n}\n/**\n * Add Group\n */\nexport function createGroup(req, res) {\n  var group = new Room;\n  group.admin = req.session._id;\n  group.name = String(req.body.groupName);\n  group.img=String(req.body.img);\n  var membersId = req.body.membersId;\n  membersId.push(group.admin);\n  group.members=membersId;\n  group.kind = 'group';\n    group.saveAsync()\n      .spread((contactRoom)=>{\n        addContRoom(contactRoom._id,membersId)\n          .then((response)=>{\n            if(response.nModified==membersId.length){\n              group.populate({\n                path:'members',\n                model:User,\n                select:\"name img status email\",\n                match:{_id:{$ne:req.session._id}}\n              },(err,data)=>{\n                  if(err) res.status(401).json(data);\n                  Room.schema.emit(\"tellGroup\",data,req.session.name);\n                  res.status(201).json(data);\n                });\n            }else{\n              showErrorMessage(res,email+\" could not be added to the room\")();\n            }\n          }).catch(handleError(res));\n      }).catch(handleError(res));\n}\n/**\n * Get All Friend Info\n */\nexport function getRooms(req, res) {\n  var userId =  req.params.id;\n  var kind= req.query.kind;\n  User.find({_id:userId}, {\"rooms\":1,\"_id\":0})\n    .populate({\n      path:\"rooms\",\n      select:\"members name kind img admin lastMessageDate lastMessageDate_ms\",\n      match:{kind:kind},\n      populate:{\n        path:\"members\",\n        model:User,\n        select:\"name img status email\",\n        match:{_id:{$ne:userId}}\n}\n    })\n    .exec(function (err, res1) {;\n      if(err) res.status(401).json(res1);\n    //  if(kind=='par'&&res1[0].rooms){\n        console.log(\"Emiting\",res1[0].rooms);\n        Room.schema.emit('joinRooms',{rooms:res1[0].rooms,userId});\n     // }\n\n\n      res.json(res1);\n    })\n}\n\n/**\n * StoreMessage\n */\nexport function storeMessage(req, res) {\n  var userId = req.params.id;\n  var roomId= String(req.body.roomId);\n  var message= new Message({\n    name:req.body.name,\n    text:req.body.text,\n    origin:userId,\n    roomId\n  });\n  /*var message={\n    name:req.body.name,\n    text:req.body.text,\n    origin:userId\n  };*/\n  if(req.body.scribble)\n    message.scribble=req.body.scribble;\n  //console.log(\"storeMessage \"+message, userId)\n  Room.findOneAndUpdateAsync({_id:roomId},{lastMessageDate:Date.now()},{upsert: true})\n    .then( () =>{\n          message.saveAsync().spread(()=>{\n            res.status(204).end();\n          });\n\n    });\n}\n\n/**\n * getMessage\n */\nexport function getMessage(req, res) {\n  var roomId = req.params.id;\n  var page= Number(req.query.page);\n  var messageXpage=Number(req.query.messageXpage);\n  var firstMessage=(page)*(messageXpage);\n  console.log(roomId);\n /* Room.aggregate([\n    {\"$match\":{_id:mongoose.Types.ObjectId(roomId)}},\n    {\"$project\":{\"messages\":1}},\n    {\"$unwind\":\"$messages\"},\n    {\"$sort\":{\"messages.date\":-1}},\n    {\"$skip\":firstMessage},\n    {\"$limit\":messageXpage},\n    {\"$group\":\n      {\t\"_id\":\"$_id\",\n        \"messages\":{\"$push\":\"$messages\"}\n      }\n    }\n  ],(err,message) =>{\n    console.log(message[0],err,\"hi\");\n    if(message[0])\n      return res.json(message[0].messages);\n    else\n      return res.json(message[0]);\n  })*/\n  Message.find({roomId:roomId}).sort({\"date\":-1}).skip(firstMessage).limit(messageXpage)\n  .exec((err,message)=>{\n    return res.json(message);\n    });\n\n}\n\n/**\n *  delete Friend From Group\n */\nexport function deleteFriendFromGroup(req, res) {\n  //var user = new Room;\n  var roomId= String(req.body.roomId);\n  var friendId= String(req.body.friendId);\n  var groupName= String(req.body.groupName);\n\n  Room.updateAsync({_id:roomId},{$pull:{members:friendId}})\n  .then(()=>{\n      User.findByIdAsync(friendId,{name:1})\n      .then((doc)=>{\n         // Room.schema.emit(\"leaveRoom\",{id:friendId,roomId});\n          Room.schema.emit(\"groupRemovedContact\",{\n            roomId,\n            friendId,\n            groupName,\n            friendName:doc.name\n          },req.session.name);\n\n        })\n      .catch(handleError(res));\n      res.status(204).end();\n    });\n  User.updateAsync({_id:friendId},{$pull:{rooms:roomId}});\n\n}\n//************************************************\n//Group Behavior\n/**\n *  exit Group\n */\nexport function exitGroup(req, res) {\n  //var user = new Room;\n  var userId = req.session._id;\n  var roomId= String(req.body.roomId);\n  var newAdmin= String(req.body.newAdmin);\n  var groupName= String(req.body.groupName);\n  Room.updateAsync({_id:roomId},{$pull:{members:userId},admin:newAdmin})\n    .then(()=>{\n      Room.schema.emit(\"groupExitContact\",{name:req.session.name,groupName:groupName,userId,roomId});\n      res.status(204).end();\n    }) .catch(handleError(res));\n  User.updateAsync({_id:userId},{$pull:{rooms:roomId}});\n\n}\n/**\n *  delete Group\n */\nexport function deleteGroup(req, res) {\n\n  var roomId= String(req.body.roomId);\n  Room.findByIdAndRemoveAsync(roomId,{'members':1,'name':1,'_id':0})\n  .then((data)=>{\n     // console.log(data);\n      removeContRoom(roomId,data.members)\n      .then(()=>{\n          Room.schema.emit(\"groupDeleted\",{name:req.session.name,groupName:data.name,roomId});\n          res.status(204).end();\n      }).catch(handleError(res));\n    }).catch(handleError(res));\n\n}\n/**\n *  add Friend To Group\n */\nexport function addFriendToGroup(req, res) {\n  var roomId= req.body.roomId;\n  var membersId= req.body.membersId;\n  var groupName= String(req.body.groupName);\n  Room.updateAsync({_id:roomId},{$addToSet:{members:{$each:membersId}}})\n    .then(()=>{\n      addContRoom(roomId,membersId)\n        .then(()=>{\n          Room.schema.emit(\"groupAddedContact\",{\n            roomId,\n            membersId,\n            groupName\n          },req.session.name);\n        })\n        .catch(handleError(res));\n      res.status(204).end();\n    });\n\n}\n//**********************************\n//friend request behavior\n\n/**\n *  Accept friend from a request\n */\nexport function acceptFriend(req, res) {\n  var friendId= String(req.body.friendId);\n  var userId =req.session._id;\n  User.findByIdAsync(friendId,{\"name\":1,\"img\":1,\"status\":1,\"email\":1})\n  .then((friend)=>{\n      Room.createAsync({\n        members:[friendId,userId],\n        kind:'par'\n      }).then(contactRoom=>{\n        addParRoom(friendId,userId,contactRoom._id)\n          .then(()=>{\n              Room.schema.emit(\"acceptFriend\",\n                { toId:friendId,\n                  fromId:userId,\n                  from:{_id:contactRoom._id,\n                    members:[req.session.user],\n                    messages:[],\n                    kind:'par',\n                    lastMessageDate_ms:contactRoom.lastMessageDate_ms\n                  }\n                });\n              res.status(201).json({_id:contactRoom._id,\n                members:[friend],messages:[],\n                kind:'par',\n                lastMessageDate_ms:contactRoom.lastMessageDate_ms\n              });\n\n          }).catch(handleError(res));\n      }).catch(handleError(res));\n    }).catch(handleError(res));\n\n\n}\n\n/**\n * Reject friend:\n *  rejecting a friend will add the user into the spam array that won't allow that\n *  user to ask the current user being a friend again\n * @param req\n * @param res\n */\nexport function rejectFriend(req, res) {\n  var friendId= String(req.body.friendId);\n  var userId =req.session._id;\n  var promises=[];\n  promises.push(User.findByIdAndUpdate(friendId,{$pull:{pending:userId}}));\n  promises.push( User.findByIdAndUpdate(userId,{$pull:{request:friendId},$push:{spam:friendId}}));\n  Promise.all(promises)\n    .then(()=>{\n      res.status(201).json({});\n    }).catch(handleError(res));\n}\n\n/**\n * GetRequestPendings:\n *  Will get all the pending request that a certain user have\n * @param req\n * @param res\n */\nexport function getRequestPendings(req, res) {\n  var userId =  req.params.id;\n  var promises=[];\n  promises.push(User.findOne({_id:userId}, {\"request\":1,\"_id\":0})\n    .populate({\n      path:\"request\",\n      select:\"email name  img\",\n      model:User\n    }));\n  promises.push(User.findOne({_id:userId}, {\"pending\":1,\"_id\":0})\n    .populate({\n      path:\"pending\",\n      select:\"email name  img\",\n      model:User\n    }));\n    Promise.all(promises)\n      .then((data)=> {\n        console.log(data[0],data[1].pending);\n        res.json({pendings:data[1].pending,requests:data[0].request});\n      })\n}\n\n"]}